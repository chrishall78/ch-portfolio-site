/*! normalize.css v1.1.3 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block;*display:inline;*zoom:1}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}html,button,input,select,textarea{font-family:sans-serif}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em;margin:.83em 0}h3{font-size:1.17em;margin:1em 0}h4{font-size:1em;margin:1.33em 0}h5{font-size:.83em;margin:1.67em 0}h6{font-size:.67em;margin:2.33em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:400}blockquote{margin:1em 40px}dfn{font-style:italic}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}mark{background:#ff0;color:#000}p,pre{margin:1em 0}code,kbd,pre,samp{font-family:monospace,serif;_font-family:'courier new',monospace;font-size:1em}pre{white-space:pre;white-space:pre-wrap;word-wrap:break-word}q{quotes:none}q:before,q:after{content:'';content:none}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}dl,menu,ol,ul{margin:1em 0}dd{margin:0 0 0 40px}menu,ol,ul{padding:0 0 0 40px}nav ul,nav ol{list-style:none;list-style-image:none}img{border:0;-ms-interpolation-mode:bicubic}svg:not(:root){overflow:hidden}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}

/* Suitcss Utils
========================================================================== */
/* *
* Vertical alignment utilities
* Depends on an appropriate `display` value. */

.u-alignBaseline { vertical-align: baseline !important; }
.u-alignBottom { vertical-align: bottom !important; }
.u-alignMiddle { vertical-align: middle !important; }
.u-alignTop { vertical-align: top !important; }
/* *
* Display-type utilities */
.u-block { display: block !important; }
.u-hidden { display: none !important; }
/* *
* Completely remove from the flow but leave available to screen readers. */
.u-hiddenVisually { position: absolute !important; overflow: hidden !important; width: 1px !important; height: 1px !important; padding: 0 !important; border: 0 !important; clip: rect(1px, 1px, 1px, 1px) !important; }
.u-inline { display: inline !important; }
/* *
* 1. Fix for Firefox bug:an image styled `max-width:100%` within an
* inline-block will display at its default size, and not limit its width to
* 100% of an ancestral container. */
.u-inlineBlock { display: inline-block !important; max-width: 100%; /* 1 */ }
.u-table { display: table !important; }
.u-tableCell { display: table-cell !important; }
.u-tableRow { display: table-row !important; }
/* *
* Contain floats
*
* Make an element expand to contain floated children.
* Uses pseudo-elements (micro clearfix).
*
* 1. The space content is one way to avoid an Opera bug when the
*    `contenteditable` attribute is included anywhere else in the document.
*    Otherwise it causes space to appear at the top and bottom of the
*    element.
* 2. The use of `table` rather than `block` is only necessary if using
*    `:before` to contain the top-margins of child elements. */
.u-cf:before, .u-cf:after { content: " "; /* 1 */
display: table; /* 2 */ }
.u-cf:after { clear: both; }
/* *
* New block formatting context
*
* This affords some useful properties to the element. It won't wrap under
* floats. Will also contain any floated children.

* N.B. This will clip overflow. Use the alternative method below if this is
* problematic. */
.u-nbfc { overflow: hidden !important; }
/* *
* New block formatting context (alternative)
*
* Alternative method when overflow must not be clipped.
*
* 1. Create a new block formatting context (NBFC).
* 2. Avoid shrink-wrap behaviour of table-cell.
*
* N.B. This breaks down in some browsers when elements within this element
* exceed its width. */
.u-nbfcAlt { display: table-cell !important; /* 1 */
width: 10000px !important; /* 2 */ }
/* *
* Floats */
.u-floatLeft { float: left !important; }
.u-floatRight { float: right !important; }
/* *
* Clean link
*
* A link without any text-decoration at all. */
.u-linkClean, .u-linkClean:hover, .u-linkClean:focus, .u-linkClean:active { text-decoration: none !important; }
/* *
* Link complex
*
* A common pattern is to have a link with several pieces of text and/or an
* icon, where only one piece of text should display the underline when the
* link is the subject of user interaction.
*
* Example HTML:*
* <a class="u-linkComplex" href="#">
*   Link complex
*   <span class="u-linkComplexTarget">target</span>
* </a> */
.u-linkComplex, .u-linkComplex:hover, .u-linkComplex:focus, .u-linkComplex:active { text-decoration: none !important; }
.u-linkComplex:hover .u-linkComplexTarget, .u-linkComplex:focus .u-linkComplexTarget, .u-linkComplex:active .u-linkComplexTarget { text-decoration: underline !important; }
/* *
* Block-level link
*
* Combination of traits commonly used in vertical navigation lists. */
.u-linkBlock, .u-linkBlock:hover, .u-linkBlock:focus, .u-linkBlock:active { display: block !important; text-decoration: none !important; }
.u-posAbsolute { position: absolute !important; }
/* *
* Pins to all corners by default. But when a width and/or height are
* provided, the element will be centered in its nearest relatively-positioned
* ancestor. */
.u-posAbsoluteCenter { bottom: 0 !important; left: 0 !important; margin: auto !important; position: absolute !important; right: 0 !important; top: 0 !important; }
/* *
* 1. Make sure fixed elements are promoted into a new layer, for performance
*    reasons. */
.u-posFixed { position: fixed !important; -webkit-backface-visibility: hidden; backface-visibility: hidden; /* 1 */ }
.u-posRelative { position: relative !important; }
.u-posStatic { position: static !important; }
/* *
* Sizing utilities */
/* Intrinsic widths
========================================================================== */

/* *
* Make an element shrink wrap its content. */

.u-sizeFit, .u-sizeFitAlt { display: block !important; float: left !important; width: auto !important; }
.u-sizeFitAlt { float: right !important; }
/* *
* Make an element fill the remaining space.
* N.B. This will hide overflow. */
.u-sizeFill { display: block !important; overflow: hidden !important; width: auto !important; }
/* *
* An alternative method to make an element fill the remaining space.
* N.B. Do not use if child elements might be wider than the remaining space.
* In Chrome, Safari, and Firefox it results in undesired layout. */
.u-sizeFillAlt { display: table-cell !important; max-width: 100% !important; width: 10000px !important; }
/* *
* Make an element the width of its parent. */
.u-sizeFull { box-sizing: border-box !important; display: block !important; width: 100% !important; }
/* *
* Word breaking
*
* Break strings when their length exceeds the width of their container. */
.u-textBreak { word-wrap: break-word !important; }
/* *
* Horizontal text alignment */
.u-textCenter { text-align: center !important; }
.u-textLeft { text-align: left !important; }
.u-textRight { text-align: right !important; }
/* *
* Inherit the ancestor's text color. */
.u-textInheritColor { color: inherit !important; }
/* *
* Text cases */
.u-textUpper { text-transform: uppercase !important; }
.u-textLower { text-transform: lowercase !important; }
/* *
* Enables font kerning in all browsers.
* http://blog.typekit.com/2014/02/05/kerning-on-the-web/
*
* 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
* 2. Chrome (not Windows), Firefox, IE 10+
* 3. Safari 7 and future browsers */
.u-textKern { text-rendering: optimizeLegibility; /* 1 */
  -webkit-font-feature-settings: "kern" 1; -moz-font-feature-settings: "kern" 1; font-feature-settings: "kern" 1; /* 2 */
-webkit-font-kerning: normal; -moz-font-kerning: normal; font-kerning: normal; /* 3 */ }
/* *
* Prevent whitespace wrapping */
.u-textNoWrap { white-space: nowrap !important; }
/* *
* Text truncation
*
* Prevent text from wrapping onto multiple lines, and truncate with an
* ellipsis.
*
* 1. Ensure that the node has a maximum width after which truncation can
*    occur.
* 2. Fix for IE 8/9 if `word-wrap:break-word` is in effect on ancestor
*    nodes. */
.u-textTruncate { max-width: 100%; /* 1 */
overflow: hidden !important; text-overflow: ellipsis !important; white-space: nowrap !important; word-wrap: normal !important; /* 2 */ }


/* Grid
========================================================================== */
/* box-sizing:border-box setting to include borders and padding inside the set width / the margin is drawn outside */
*, *:before, *:after { margin: 0; padding: 0; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }
img { vertical-align: bottom; }
img.responsive { max-width: 100%; }

/* Small screens (default) */
html { font-size: 100%; }
a:link, a:visited { text-decoration: none; }
a:hover, a:active, a:focus { text-decoration: none; outline: 0; }
select, input, textarea { outline: 0; }

.container { margin: 0 auto; max-width: 1064px; width: 100%; position: relative; }
.row { /* padding-bottom: 5px; */ }
/*.column span { display: block; padding: 10px; } */

/* Styles for screens 640px and lower */
@media only screen and (max-width:640px) {
	.row { padding: 0; }
	.column { padding: 0 5px; }
	.full-bleed { width: 111.5%; margin: 0px 0 0 -6%; overflow: hidden; }
	.hide-on-mobile { display: none; }
	.hide-on-desktop { display: block; }
}

/* Medium screens (641px 40rem and higher) */
@media (min-width:641px) {
	html { font-size: 112%; }
	.container { width: 100%; }
	.row { /* padding-top: 5px; padding-bottom: 5px; */ }
	.column { float: left; padding-left: 5px; padding-right: 5px; }
	.column.full { width: 100%; }
	.column.two-thirds { width: 66.66666%; }
	.column.half { width: 50%; }
	.column.third { width: 33.33334%; }
	.column.three-fourths { width: 75%; }
	.column.fourth { width: 25%; }
	.column.fifth { width: 20%; }
	.column.flow-opposite { float: right; padding-right: 0; }
	.two-thirds.flow-opposite, .three-fourths.flow-opposite { float: right; padding-right: 10px; }
	.hide-on-mobile { display: block; }
	.hide-on-desktop { display: none; }
}

/* Large screens (1024px 64rem and higher) */
@media (min-width:1024px) {
	html { font-size: 120%; }
	.hide-on-mobile { display: block; }
	.hide-on-desktop { display: none; }
}

/* Clearfix by Nicolas Gallagher
========================================================================== */
.clearfix:before, .clearfix:after { content: " "; display: table; }
.clearfix:after { clear: both; }
.clearfix { *zoom: 1; }